definitions:
  baseres.SwaggerInternalErrRes:
    properties:
      m:
        example: Internal Server Error
        type: string
      s:
        example: false
        type: boolean
    type: object
  baseres.SwaggerSuccessRes-queries_LoginQueryResponse:
    properties:
      d:
        $ref: '#/definitions/queries.LoginQueryResponse'
      m:
        example: XXX Created/Updated/Deleted Successfully
        type: string
      s:
        example: true
        type: boolean
    type: object
  baseres.SwaggerSuccessRes-queries_RefreshTokenQueryResponse:
    properties:
      d:
        $ref: '#/definitions/queries.RefreshTokenQueryResponse'
      m:
        example: XXX Created/Updated/Deleted Successfully
        type: string
      s:
        example: true
        type: boolean
    type: object
  baseres.SwaggerUnauthorizedErrRes:
    properties:
      m:
        example: Unauthorized
        type: string
      s:
        example: false
        type: boolean
    type: object
  baseres.SwaggerValidationErrRes:
    properties:
      s:
        example: false
        type: boolean
      v:
        items:
          $ref: '#/definitions/baseres.ValidationError'
        type: array
    type: object
  baseres.ValidationError:
    properties:
      e:
        example: age must be greater than 0
        type: string
      f:
        example: age
        type: string
    type: object
  queries.LoginQuery:
    properties:
      password:
        maxLength: 20
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  queries.LoginQueryResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  queries.RefreshTokenQueryResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
host: 127.0.0.1:5005
info:
  contact:
    email: ndodanli14@gmail.com
  description: This is an example server
  title: Swagger Auth API
  version: "1.0"
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Username
        in: body
        name: loginReq
        required: true
        schema:
          $ref: '#/definitions/queries.LoginQuery'
      produces:
      - application/json
      responses:
        "200":
          description: OK. On success.
          schema:
            $ref: '#/definitions/baseres.SwaggerSuccessRes-queries_LoginQueryResponse'
        "400":
          description: Bad Request. On any validation error.
          schema:
            $ref: '#/definitions/baseres.SwaggerValidationErrRes'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/baseres.SwaggerUnauthorizedErrRes'
        "500":
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/baseres.SwaggerInternalErrRes'
      security:
      - BearerAuth: []
      summary: Login
      tags:
      - Auth
  /v1/auth/refreshToken:
    get:
      consumes:
      - application/json
      description: RefreshToken
      parameters:
      - description: Refresh Token
        in: path
        name: refreshToken
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK. On success.
          schema:
            $ref: '#/definitions/baseres.SwaggerSuccessRes-queries_RefreshTokenQueryResponse'
        "400":
          description: Bad Request. On any validation error.
          schema:
            $ref: '#/definitions/baseres.SwaggerValidationErrRes'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/baseres.SwaggerUnauthorizedErrRes'
        "500":
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/baseres.SwaggerInternalErrRes'
      security:
      - BearerAuth: []
      summary: RefreshToken
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
